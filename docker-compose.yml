version: '2.1'

services:
  reverseproxy:
    image: nginx:alpine
    ports:
      - 82:82
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always

  db.postgres.core:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: apiservice
      POSTGRES_DB: ts_data
    volumes:
      - postgres-core-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  db.postgres.identity:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: identityservice
      POSTGRES_DB: ts_identity
    volumes:
      - postgres-identity-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  transportsystems.backend.api:
    build:
      context: .
      dockerfile: Backend/API/src/Dockerfile
    depends_on:
      db.postgres.core:
        condition: service_healthy

  transportsystems.backend.identity.signin:
    build:
      context: .
      dockerfile: Backend/Identity/Signin/Dockerfile
    depends_on:
      db.postgres.identity:
        condition: service_healthy

  transportsystems.backend.identity.manage:
    build:
      context: .
      dockerfile: Backend/Identity/Manage/Dockerfile
    depends_on:
      db.postgres.identity:
        condition: service_healthy

volumes:
  postgres-core-data:
    external: true
  postgres-identity-data:
    external: true