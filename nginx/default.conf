server {
    listen        82;

    # swagger ui работает в api сервисе
    # для отображения списка api генерирует файл index.html
    # соответственно при запросе index.html редиректим на api сервис
    location /index.html {
        proxy_pass         http://transportsystems.backend.api;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $http_host;
        proxy_cache_bypass $http_upgrade;
    }

    # в api сервисе swagger генерирует описание endpoint's
    # в json файл по адресу /swagger/v1/swagger.json
    # соответственно при запросе /swagger/ редиректим на api сервис
    location /swagger/ {
        proxy_pass         http://transportsystems.backend.api;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $http_host;
        proxy_cache_bypass $http_upgrade;
    }
    location /api/ {
        proxy_pass         http://transportsystems.backend.api;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $http_host;
        proxy_cache_bypass $http_upgrade;
    }
    location /identity/manage/ {
        proxy_pass         http://transportsystems.backend.identity.manage;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $http_host;
        proxy_cache_bypass $http_upgrade;
    }
    location / {
        proxy_pass         http://transportsystems.backend.identity.signin;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $http_host;
        proxy_cache_bypass $http_upgrade;
    }
}
